/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NomoNounsDescriptor,
  NomoNounsDescriptorInterface,
} from "../../contracts/NomoNounsDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadPaletteLength",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPalette",
    type: "error",
  },
  {
    inputs: [],
    name: "IndexNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsArt",
        name: "art",
        type: "address",
      },
    ],
    name: "ArtUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DataURIToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISVGRenderer",
        name: "renderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "accessories",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "art",
    outputs: [
      {
        internalType: "contract INounsArt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgroundOverrides",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "bodies",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bodyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "getPartsForSeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "palette",
            type: "bytes",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "glasses",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glassesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "heads",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDataURIEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
    ],
    name: "setArt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_color",
        type: "string",
      },
    ],
    name: "setBackgroundOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleDataURIEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "unsetBackgroundOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200259f3803806200259f8339810160408190526200004791620000ed565b620000523362000084565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556200012c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000ea57600080fd5b50565b600080604083850312156200010157600080fd5b82516200010e81620000d4565b60208401519092506200012181620000d4565b809150509250929050565b612463806200013c6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ca9421011610104578063bc2d45fe116100a2578063dfe8478b11610071578063dfe8478b1461042a578063e6b1a3ae14610432578063eba8180614610445578063f2fde38b1461044d57600080fd5b8063bc2d45fe146103c7578063be9570bd146103da578063cc2aa091146103ed578063ce2f4f53146103f557600080fd5b8063b8bed3b1116100de578063b8bed3b11461037b578063b982d1b91461038e578063bb145866146103a1578063bbf103ef146103b457600080fd5b80637ca942101461032a5780638ada6b0f1461033d5780638da5cb5b1461035d57600080fd5b80634daebac21161017c5780635a503f131161014b5780635a503f13146102f45780635b9968f9146103075780636c0360eb1461031a578063715018a61461032257600080fd5b80634daebac2146102b357806355f804b3146102bb57806356d3163d146102ce57806357c1bf01146102e157600080fd5b80634136a006116101b85780634136a0061461026d5780634479cef21461028257806344cee73c146102985780634531c0a8146102ab57600080fd5b806304bde4dd146101df57806315d6cde914610208578063301bd28e14610228575b600080fd5b6101f26101ed3660046117cd565b610460565b6040516101ff919061183e565b60405180910390f35b61021b6102163660046119b9565b6105c0565b6040516101ff91906119d5565b6001546102489073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ff565b61028061027b3660046117cd565b61099f565b005b61028a6109c1565b6040519081526020016101ff565b6101f26102a63660046117cd565b610a61565b61028a610afa565b61028a610b93565b6102806102c9366004611ac1565b610c02565b6102806102dc366004611b25565b610c55565b6101f26102ef366004611b42565b610cd7565b6101f26103023660046117cd565b610d8b565b610280610315366004611b6f565b610de3565b6101f2610e0a565b610280610e98565b6101f26103383660046117cd565b610eac565b6002546102489073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16610248565b6101f2610389366004611b42565b610f04565b6101f261039c3660046117cd565b610f6e565b6101f26103af3660046117cd565b610fc6565b6101f26103c23660046119b9565b610fdf565b6101f26103d5366004611bbb565b6110cd565b6101f26103e8366004611c5c565b611127565b61028a61123c565b60025461041a9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016101ff565b6102806112ab565b610280610440366004611b25565b61132f565b61028a6113aa565b61028061045b366004611b25565b611419565b600081815260046020526040902080546060919061047d90611cd2565b9050600003610522576001546040517f04bde4dd0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116906304bde4dd90602401600060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051d9190810190611d55565b6105ba565b6000828152600460205260409020805461053b90611cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461056790611cd2565b80156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b50505050505b92915050565b60015460408281015190517f44cee73c00000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015260609160009173ffffffffffffffffffffffffffffffffffffffff909116906344cee73c90602401600060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106699190810190611d55565b60015460608501516040517f7ca9421000000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690637ca9421090602401600060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107129190810190611d55565b60015460808601516040517f5a503f1300000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690635a503f1390602401600060405180830381865afa158015610793573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107bb9190810190611d55565b60015460a08701516040517fb982d1b900000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063b982d1b990602401600060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108649190810190611d55565b60408051600480825260a0820190925291925060009190816020015b604080518082019091526060808252602082015281526020019060019003908161088057905050905060405180604001604052808681526020016108c3876114d2565b815250816000815181106108d9576108d9611d9e565b602002602001018190525060405180604001604052808581526020016108fe866114d2565b8152508160018151811061091457610914611d9e565b60200260200101819052506040518060400160405280848152602001610939856114d2565b8152508160028151811061094f5761094f611d9e565b60200260200101819052506040518060400160405280838152602001610974846114d2565b8152508160038151811061098a5761098a611d9e565b60209081029190910101529695505050505050565b6109a761154c565b60008181526004602052604081206109be9161177f565b50565b600154604080517fe73dd383000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163e73dd38391600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a589190810190611dcd565b60200151905090565b6001546040517f44cee73c0000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff16906344cee73c906024015b600060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ba9190810190611d55565b600154604080517ffd30704b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163fd30704b9160048083019260209291908290030181865afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611f09565b905090565b600154604080517fc64b2f5d000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163c64b2f5d91600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b610c0a61154c565b6003610c17828483611f71565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8282604051610c4992919061206e565b60405180910390a15050565b610c5d61154c565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f482cbbbcf912da3be80deb8503ae1e94c0b7d5d1d0ec0af3d9d6403e06e609ee906020015b60405180910390a150565b60606000610ce4846115cd565b9050600081604051602001610cf9919061209d565b60405160208183030381529060405290506000604051602001610d65907f546865792077616e74656420746f206265636f6d652061204e6f756e2c20627581527f74206e6f77207468657920617265204e6f27204d6f2700000000000000000000602082015260360190565b6040516020818303038152906040529050610d81828287611127565b9695505050505050565b6001546040517f5a503f130000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff1690635a503f1390602401610ab5565b610deb61154c565b6000838152600460205260409020610e04828483611f71565b50505050565b60038054610e1790611cd2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4390611cd2565b8015610e905780601f10610e6557610100808354040283529160200191610e90565b820191906000526020600020905b815481529060010190602001808311610e7357829003601f168201915b505050505081565b610ea061154c565b610eaa600061170a565b565b6001546040517f7ca942100000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff1690637ca9421090602401610ab5565b60025460609074010000000000000000000000000000000000000000900460ff1615610f3b57610f348383610cd7565b90506105ba565b6003610f46846115cd565b604051602001610f579291906120e2565b604051602081830303815290604052905092915050565b6001546040517fb982d1b90000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff169063b982d1b990602401610ab5565b60046020526000908152604090208054610e1790611cd2565b606060006040518060400160405280610ff7856105c0565b8152602001611010856020015164ffffffffff16610460565b90526002546040517f22cc1ad600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__916322cc1ad6916110819173ffffffffffffffffffffffffffffffffffffffff909116908590600401612202565b600060405180830381865af415801561109e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110c69190810190611d55565b9392505050565b6001546040517fbc2d45fe00000000000000000000000000000000000000000000000000000000815260ff8316600482015260609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90602401610ab5565b606060006040518060a00160405280868152602001611150856000015164ffffffffff166115cd565b815260200185815260200161116f856020015164ffffffffff16610460565b815260200161117d856105c0565b90526002546040517f8873aaf600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__91638873aaf6916111ee9173ffffffffffffffffffffffffffffffffffffffff909116908590600401612274565b600060405180830381865af415801561120b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112339190810190611d55565b95945050505050565b600154604080517f368013dc000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163368013dc91600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b6112b361154c565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116740100000000000000000000000000000000000000009182900460ff1615918202179091556040518181527f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde90602001610ccc565b61133761154c565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f89382d75256b43b6826ad8d6cbd8e517eaf5e10f1ef4c8f123c9a25ac4529b5590602001610ccc565b600154604080517f222a36d0000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163222a36d091600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b61142161154c565b73ffffffffffffffffffffffffffffffffffffffff81166114c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6109be8161170a565b600154815160609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90849060009061150857611508611d9e565b01602001516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260f89190911c6004820152602401610ab5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610eaa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016114c0565b60608160000361161057505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561163a57806116248161236f565b91506116339050600a836123d6565b9150611614565b60008167ffffffffffffffff81111561165557611655611851565b6040519080825280601f01601f19166020018201604052801561167f576020820181803683370190505b5090505b8415611702576116946001836123ea565b91506116a1600a86612401565b6116ac906030612415565b60f81b8183815181106116c1576116c1611d9e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506116fb600a866123d6565b9450611683565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461178b90611cd2565b6000825580601f1061179b575050565b601f0160209004906000526020600020908101906109be91905b808211156117c957600081556001016117b5565b5090565b6000602082840312156117df57600080fd5b5035919050565b60005b838110156118015781810151838201526020016117e9565b83811115610e045750506000910152565b6000815180845261182a8160208601602086016117e6565b601f01601f19169290920160200192915050565b6020815260006110c66020830184611812565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156118a3576118a3611851565b60405290565b6040516060810167ffffffffffffffff811182821017156118a3576118a3611851565b604051601f8201601f1916810167ffffffffffffffff811182821017156118f5576118f5611851565b604052919050565b803564ffffffffff8116811461191257600080fd5b919050565b600060c0828403121561192957600080fd5b60405160c0810181811067ffffffffffffffff8211171561194c5761194c611851565b60405290508061195b836118fd565b8152611969602084016118fd565b602082015261197a604084016118fd565b604082015261198b606084016118fd565b606082015261199c608084016118fd565b60808201526119ad60a084016118fd565b60a08201525092915050565b600060c082840312156119cb57600080fd5b6110c68383611917565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611a6a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281518051878552611a3e88860182611812565b91890151858303868b0152919050611a568183611812565b9689019694505050908601906001016119fc565b509098975050505050505050565b60008083601f840112611a8a57600080fd5b50813567ffffffffffffffff811115611aa257600080fd5b602083019150836020828501011115611aba57600080fd5b9250929050565b60008060208385031215611ad457600080fd5b823567ffffffffffffffff811115611aeb57600080fd5b611af785828601611a78565b90969095509350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146109be57600080fd5b600060208284031215611b3757600080fd5b81356110c681611b03565b60008060e08385031215611b5557600080fd5b82359150611b668460208501611917565b90509250929050565b600080600060408486031215611b8457600080fd5b83359250602084013567ffffffffffffffff811115611ba257600080fd5b611bae86828701611a78565b9497909650939450505050565b600060208284031215611bcd57600080fd5b813560ff811681146110c657600080fd5b600067ffffffffffffffff821115611bf857611bf8611851565b50601f01601f191660200190565b600082601f830112611c1757600080fd5b8135611c2a611c2582611bde565b6118cc565b818152846020838601011115611c3f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006101008486031215611c7257600080fd5b833567ffffffffffffffff80821115611c8a57600080fd5b611c9687838801611c06565b94506020860135915080821115611cac57600080fd5b50611cb986828701611c06565b925050611cc98560408601611917565b90509250925092565b600181811c90821680611ce657607f821691505b602082108103611d1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000611d33611c2584611bde565b9050828152838383011115611d4757600080fd5b6110c68360208301846117e6565b600060208284031215611d6757600080fd5b815167ffffffffffffffff811115611d7e57600080fd5b8201601f81018413611d8f57600080fd5b61170284825160208401611d25565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808385031215611de057600080fd5b825167ffffffffffffffff80821115611df857600080fd5b81850191506040808388031215611e0e57600080fd5b611e16611880565b835183811115611e2557600080fd5b8401601f81018913611e3657600080fd5b805184811115611e4857611e48611851565b611e56878260051b016118cc565b8181528781019550606091820283018801918b831115611e7557600080fd5b928801925b82841015611ef05780848d031215611e925760008081fd5b611e9a6118a9565b845161ffff81168114611ead5760008081fd5b8152848a015169ffffffffffffffffffff81168114611ecc5760008081fd5b818b015284870151611edd81611b03565b8188015287529588019592830192611e7a565b5083525050928401519383019390935250949350505050565b600060208284031215611f1b57600080fd5b5051919050565b601f821115611f6c57600081815260208120601f850160051c81016020861015611f495750805b601f850160051c820191505b81811015611f6857828155600101611f55565b5050505b505050565b67ffffffffffffffff831115611f8957611f89611851565b611f9d83611f978354611cd2565b83611f22565b6000601f841160018114611fef5760008515611fb95750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355612067565b600083815260209020601f19861690835b828110156120205786850135825560209485019460019092019101612000565b508682101561205b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b7f4e6f6d6f4e6f756e2000000000000000000000000000000000000000000000008152600082516120d58160098501602087016117e6565b9190910160090192915050565b60008084546120f081611cd2565b60018281168015612108576001811461213b5761216a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061216a565b8860005260208060002060005b858110156121615781548a820152908401908201612148565b50505082870194505b50505050835161217e8183602088016117e6565b01949350505050565b600081518084526020808501808196508360051b8101915082860160005b858110156121f55782840389528151604081518187526121c782880182611812565b915050868201519150858103878701526121e18183611812565b9a87019a95505050908401906001016121a5565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082516040808401526122396080840182612187565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610d818282611812565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160a060408401526122ac60e0840182611812565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808584030160608601526122e88383611812565b925060408601519150808584030160808601526123058383611812565b925060608601519150808584030160a08601526123228383611812565b925060808601519150808584030160c086015250610d818282612187565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123a0576123a0612340565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826123e5576123e56123a7565b500490565b6000828210156123fc576123fc612340565b500390565b600082612410576124106123a7565b500690565b6000821982111561242857612428612340565b50019056fea2646970667358221220f6ac4ba189b705f2e7998455bc25b0f4b7fbdc1a235ad6dca403b05f685b466464736f6c634300080f0033";

type NomoNounsDescriptorConstructorParams =
  | [linkLibraryAddresses: NomoNounsDescriptorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NomoNounsDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NomoNounsDescriptor__factory extends ContractFactory {
  constructor(...args: NomoNounsDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NomoNounsDescriptor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NomoNounsDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$898be40fe8843234b138800c5ed3fc0496\\$__", "g"),
      linkLibraryAddresses["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NomoNounsDescriptor> {
    return super.deploy(
      _art,
      _renderer,
      overrides || {}
    ) as Promise<NomoNounsDescriptor>;
  }
  override getDeployTransaction(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_art, _renderer, overrides || {});
  }
  override attach(address: string): NomoNounsDescriptor {
    return super.attach(address) as NomoNounsDescriptor;
  }
  override connect(signer: Signer): NomoNounsDescriptor__factory {
    return super.connect(signer) as NomoNounsDescriptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NomoNounsDescriptorInterface {
    return new utils.Interface(_abi) as NomoNounsDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NomoNounsDescriptor {
    return new Contract(address, _abi, signerOrProvider) as NomoNounsDescriptor;
  }
}

export interface NomoNounsDescriptorLibraryAddresses {
  ["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]: string;
}
