/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NomoNounsToken,
  NomoNounsTokenInterface,
} from "../../contracts/NomoNounsToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintingStartPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mintingIncreaseInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mintingPriceIncreasePerInterval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_withdrawWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract INounsAuctionHouseExtra",
        name: "_auctionHouse",
        type: "address",
      },
      {
        internalType: "contract INomoNounsSeeder",
        name: "_seeder",
        type: "address",
      },
      {
        internalType: "contract INomoNounsDescriptor",
        name: "_descriptor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WITHDRAW_NOT_SUCCESS",
    type: "error",
  },
  {
    inputs: [],
    name: "WITHDRAW_NO_BALANCE",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        indexed: false,
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "NomoCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounsId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blocknumberHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "auctionStartTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "auctionEndTimestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "_verify",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionHouse",
    outputs: [
      {
        internalType: "contract INounsAuctionHouseExtra",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "descriptor",
    outputs: [
      {
        internalType: "contract INomoNounsDescriptor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "getMintingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getNounId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blocknumberHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "auctionStartTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "auctionEndTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingIncreaseInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingPriceIncreasePerInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingStartPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nounIdOfNomo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeder",
    outputs: [
      {
        internalType: "contract INomoNounsSeeder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "uint40",
        name: "nounId",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "background",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "body",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "accessory",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "head",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "glasses",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURIHash",
        type: "string",
      },
    ],
    name: "setContractURIHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INomoNounsDescriptor",
        name: "_descriptor",
        type: "address",
      },
    ],
    name: "setDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintingIncreaseInterval",
        type: "uint256",
      },
    ],
    name: "setMintingIncreaseInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintingPriceIncreasePerInterval",
        type: "uint256",
      },
    ],
    name: "setMintingPriceIncreasePerInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintingStartPrice",
        type: "uint256",
      },
    ],
    name: "setMintingStartPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INomoNounsSeeder",
        name: "_seeder",
        type: "address",
      },
    ],
    name: "setSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_withdrawWallet",
        type: "address",
      },
    ],
    name: "setWithdrawWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620038a7380380620038a7833981016040819052620000359162000253565b604051806040016040528060098152602001684e4f4d4f4e4f554e5360b81b815250604051806040016040528060018152602001603160f81b8152506040518060400160405280600a8152602001694e6f6d6f204e6f756e7360b01b815250604051806040016040528060048152602001634e4f4d4f60e01b8152508160029081620000c2919062000395565b506003620000d1828262000395565b5050600160005550815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120526200017333620001e8565b600f97909755601095909555601193909355600e80546001600160a01b03199081166001600160a01b039485161790915560128054821692841692909217909155600b8054821693831693909317909255600a8054831693821693909317909255600980549091169190921617905562000461565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200025057600080fd5b50565b600080600080600080600080610100898b0312156200027157600080fd5b885197506020890151965060408901519550606089015162000293816200023a565b60808a0151909550620002a6816200023a565b60a08a0151909450620002b9816200023a565b60c08a0151909350620002cc816200023a565b60e08a0151909250620002df816200023a565b809150509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031b57607f821691505b6020821081036200033c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039057600081815260208120601f850160051c810160208610156200036b5750805b601f850160051c820191505b818110156200038c5782815560010162000377565b5050505b505050565b81516001600160401b03811115620003b157620003b1620002f0565b620003c981620003c2845462000306565b8462000342565b602080601f831160018114620004015760008415620003e85750858301515b600019600386901b1c1916600185901b1785556200038c565b600085815260208120601f198616915b82811015620004325788860151825594840194600190910190840162000411565b5085821015620004515787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516133f6620004b1600039600061235c015260006123ab01526000612386015260006122df015260006123090152600061233301526133f66000f3fe6080604052600436106102fd5760003560e01c806385d178f41161018f578063c87b56dd116100e1578063ed9152c81161008a578063faf8509011610064578063faf8509014610948578063fc187d251461095b578063fdf19d181461097b57600080fd5b8063ed9152c814610825578063f0503e8014610845578063f2fde38b1461092857600080fd5b8063e8a3d485116100bb578063e8a3d485146107a7578063e985e9c5146107bc578063eb1635ed1461080557600080fd5b8063c87b56dd14610751578063d50b31eb14610771578063e10d259b1461079157600080fd5b806395d89b4111610143578063b88d4fde1161011d578063b88d4fde146106f1578063baedc1c414610704578063c23dc68f1461072457600080fd5b806395d89b411461069c57806399a2557a146106b1578063a22cb465146106d157600080fd5b806393079a621161017457806393079a621461062f5780639373f4321461064f57806393830bfb1461066f57600080fd5b806385d178f4146105f15780638da5cb5b1461061157600080fd5b80633816d570116102535780636352211e116101fc57806370a08231116101d657806370a082311461058f578063715018a6146105af5780638462151c146105c457600080fd5b80636352211e1461052f578063684931ed1461054f5780636c19e7831461056f57600080fd5b8063578ab4691161022d578063578ab469146104c25780635ac1e3bb146104e25780635bbb21771461050257600080fd5b80633816d5701461047a5780633ccfd60b1461049a57806342842e0e146104af57600080fd5b806316cfb7cf116102b5578063238ac9331161028f578063238ac9331461042757806323b872dd14610447578063303e74df1461045a57600080fd5b806316cfb7cf146103c657806317e4d8ca146103e657806318160ddd1461040a57600080fd5b806306fdde03116102e657806306fdde0314610359578063081812fc1461037b578063095ea7b3146103b357600080fd5b806301b9a3971461030257806301ffc9a714610324575b600080fd5b34801561030e57600080fd5b5061032261031d36600461285d565b610991565b005b34801561033057600080fd5b5061034461033f3660046128a8565b6109d3565b60405190151581526020015b60405180910390f35b34801561036557600080fd5b5061036e610ab8565b604051610350919061291d565b34801561038757600080fd5b5061039b610396366004612930565b610b4a565b6040516001600160a01b039091168152602001610350565b6103226103c1366004612949565b610ba7565b3480156103d257600080fd5b506103226103e1366004612930565b610c78565b3480156103f257600080fd5b506103fc60105481565b604051908152602001610350565b34801561041657600080fd5b5060015460005403600019016103fc565b34801561043357600080fd5b5060125461039b906001600160a01b031681565b610322610455366004612975565b610c85565b34801561046657600080fd5b5060095461039b906001600160a01b031681565b34801561048657600080fd5b50610322610495366004612930565b610e9c565b3480156104a657600080fd5b50610322610ea9565b6103226104bd366004612975565b610f7b565b3480156104ce57600080fd5b506103226104dd366004612930565b610f9b565b3480156104ee57600080fd5b5061036e6104fd366004612930565b610fa8565b34801561050e57600080fd5b5061052261051d3660046129b6565b6110dd565b6040516103509190612a2b565b34801561053b57600080fd5b5061039b61054a366004612930565b6111a9565b34801561055b57600080fd5b50600a5461039b906001600160a01b031681565b34801561057b57600080fd5b5061032261058a36600461285d565b6111b4565b34801561059b57600080fd5b506103fc6105aa36600461285d565b6111f6565b3480156105bb57600080fd5b5061032261125e565b3480156105d057600080fd5b506105e46105df36600461285d565b611272565b6040516103509190612aa8565b3480156105fd57600080fd5b50600e5461039b906001600160a01b031681565b34801561061d57600080fd5b506008546001600160a01b031661039b565b34801561063b57600080fd5b5061039b61064a366004612b22565b611376565b34801561065b57600080fd5b5061032261066a36600461285d565b611434565b34801561067b57600080fd5b506103fc61068a366004612930565b600d6020526000908152604090205481565b3480156106a857600080fd5b5061036e611476565b3480156106bd57600080fd5b506105e46106cc366004612b8c565b611485565b3480156106dd57600080fd5b506103226106ec366004612bc1565b611624565b6103226106ff366004612cc5565b6116ae565b34801561071057600080fd5b5061032261071f366004612d45565b611711565b34801561073057600080fd5b5061074461073f366004612930565b611729565b6040516103509190612d8e565b34801561075d57600080fd5b5061036e61076c366004612930565b6117b1565b34801561077d57600080fd5b5061032261078c36600461285d565b611895565b34801561079d57600080fd5b506103fc600f5481565b3480156107b357600080fd5b5061036e6118d7565b3480156107c857600080fd5b506103446107d7366004612dd3565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561081157600080fd5b506103fc610820366004612930565b6118ff565b34801561083157600080fd5b50600b5461039b906001600160a01b031681565b34801561085157600080fd5b506108e8610860366004612930565b600c6020526000908152604090205464ffffffffff808216916501000000000081048216916a010000000000000000000082048116916f01000000000000000000000000000000810482169174010000000000000000000000000000000000000000820481169179010000000000000000000000000000000000000000000000000090041686565b6040805164ffffffffff978816815295871660208701529386169385019390935290841660608401528316608083015290911660a082015260c001610350565b34801561093457600080fd5b5061032261094336600461285d565b611942565b6103fc610956366004612e01565b6119cf565b34801561096757600080fd5b506103fc610976366004612930565b611aff565b34801561098757600080fd5b506103fc60115481565b610999611b8c565b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161480610a6657507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b80610ab257507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060028054610ac790612e75565b80601f0160208091040260200160405190810160405280929190818152602001828054610af390612e75565b8015610b405780601f10610b1557610100808354040283529160200191610b40565b820191906000526020600020905b815481529060010190602001808311610b2357829003601f168201915b5050505050905090565b6000610b5582611be6565b610b8b576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610bb2826111a9565b9050336001600160a01b03821614610c0457610bce81336107d7565b610c04576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610c80611b8c565b601155565b6000610c9082611c34565b9050836001600160a01b0316816001600160a01b031614610cdd576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610d4357610d0d86336107d7565b610d43576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610d83576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015610d8e57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610e5257600184016000818152600460205260408120549003610e50576000548114610e505760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b610ea4611b8c565b601055565b610eb1611b8c565b47600003610eeb576040517f32e156fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610f38576040519150601f19603f3d011682016040523d82523d6000602084013e610f3d565b606091505b5050905080610f78576040517f506d09be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b610f96838383604051806020016040528060008152506116ae565b505050565b610fa3611b8c565b600f55565b6060610fb382611be6565b61102a5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e3a2055524920717565727920666f72206e6f6e6578697374656e7460448201527f20746f6b656e000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600061103583611aff565b6009546000828152600c60205260409081902090517f57c1bf010000000000000000000000000000000000000000000000000000000081529293506001600160a01b03909116916357c1bf019161109191879190600401612ec8565b600060405180830381865afa1580156110ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110d69190810190612f1f565b9392505050565b60608160008167ffffffffffffffff8111156110fb576110fb612bff565b60405190808252806020026020018201604052801561114d57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816111195790505b50905060005b8281146111a05761117b86868381811061116f5761116f612f96565b90506020020135611729565b82828151811061118d5761118d612f96565b6020908102919091010152600101611153565b50949350505050565b6000610ab282611c34565b6111bc611b8c565b601280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006001600160a01b038216611238576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b611266611b8c565b6112706000611cd5565b565b60606000806000611282856111f6565b905060008167ffffffffffffffff81111561129f5761129f612bff565b6040519080825280602002602001820160405280156112c8578160200160208202803683370190505b5060408051608081018252600080825260208201819052918101829052606081019190915290915060015b83861461136a5761130381611d3f565b915081604001516113625781516001600160a01b03161561132357815194505b876001600160a01b0316856001600160a01b031603611362578083878060010198508151811061135557611355612f96565b6020026020010181815250505b6001016112f3565b50909695505050505050565b604080517f7e62cff7169d51151dc277636e8f7ee173546446aaede42a2c66267551c6f03360208201819052918101889052606081018790526080810186905260a081018590526000919082906113e59060c00160405160208183030381529060405280519060200120611dd7565b90506114278186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e4092505050565b9998505050505050505050565b61143c611b8c565b600e80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606060038054610ac790612e75565b60608183106114c0576040517f32c1995a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806114cc60005490565b905060018510156114dc57600194505b808411156114e8578093505b60006114f3876111f6565b905084861015611512578585038181101561150c578091505b50611516565b5060005b60008167ffffffffffffffff81111561153157611531612bff565b60405190808252806020026020018201604052801561155a578160200160208202803683370190505b509050816000036115705793506110d692505050565b600061157b88611729565b90506000816040015161158c575080515b885b88811415801561159e5750848714155b15611613576115ac81611d3f565b9250826040015161160b5782516001600160a01b0316156115cc57825191505b8a6001600160a01b0316826001600160a01b03160361160b57808488806001019950815181106115fe576115fe612f96565b6020026020010181815250505b60010161158e565b505050928352509095945050505050565b3360008181526007602090815260408083206001600160a01b0387168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6116b9848484610c85565b6001600160a01b0383163b1561170b576116d584848484611e64565b61170b576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b611719611b8c565b6013611725828261300b565b5050565b604080516080810182526000808252602082018190529181018290526060810191909152604080516080810182526000808252602082018190529181018290526060810191909152600183108061178257506000548310155b1561178d5792915050565b61179683611d3f565b90508060400151156117a85792915050565b6110d683611fb3565b60606117bc82611be6565b61182e5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e3a2055524920717565727920666f72206e6f6e6578697374656e7460448201527f20746f6b656e00000000000000000000000000000000000000000000000000006064820152608401611021565b600061183983611aff565b6009546000828152600c60205260409081902090517fb8bed3b10000000000000000000000000000000000000000000000000000000081529293506001600160a01b039091169163b8bed3b19161109191879190600401612ec8565b61189d611b8c565b600a80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606060136040516020016118eb91906130cb565b604051602081830303815290604052905090565b600081421015611911575050600f5490565b601154601054611921844261318e565b61192b91906131a5565b61193591906131e0565b600f54610ab291906131ff565b61194a611b8c565b6001600160a01b0381166119c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611021565b610f7881611cd5565b60006119df888888888787611376565b6012546001600160a01b03908116911614611a3c5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401611021565b844210611a8b5760405162461bcd60e51b815260206004820152600f60248201527f4d696e74696e67206578706972656400000000000000000000000000000000006044820152606401611021565b600084611a97886118ff565b611aa191906131e0565b905080341015611af35760405162461bcd60e51b815260206004820152601560248201527f4e6f7420656e6f7567682045544820746f2070617900000000000000000000006044820152606401611021565b611427338a8a88612044565b6000815b8015611b44576000818152600d602052604090205415611b32576000908152600d602052604090205492915050565b80611b3c81613217565b915050611b03565b60405162461bcd60e51b815260206004820152601b60248201527f4e6f206e6f756e496420666f756e6420666f7220746f6b656e496400000000006044820152606401611021565b6008546001600160a01b031633146112705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611021565b600081600111158015611bfa575060005482105b8015610ab25750506000908152600460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b60008180600111611ca357600054811015611ca357600081815260046020526040812054907c010000000000000000000000000000000000000000000000000000000082169003611ca1575b806000036110d6575060001901600081815260046020526040902054611c80565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600880546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516080810182526000808252602082018190529181018290526060810191909152600082815260046020526040902054610ab290604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff1660208201527c0100000000000000000000000000000000000000000000000000000000831615159181019190915260e89190911c606082015290565b6000610ab2611de46122d2565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611e4f85856123f9565b91509150611e5c8161243e565b509392505050565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063150b7a0290611eb290339089908890889060040161322e565b6020604051808303816000875af1925050508015611eed575060408051601f3d908101601f19168201909252611eea9181019061326a565b60015b611f64573d808015611f1b576040519150601f19603f3d011682016040523d82523d6000602084013e611f20565b606091505b508051600003611f5c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001490505b949350505050565b604080516080810182526000808252602082018190529181018290526060810191909152610ab2611fe383611c34565b604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff1660208201527c0100000000000000000000000000000000000000000000000000000000831615159181019190915260e89190911c606082015290565b6000838152600c602052604081205464ffffffffff1681036122bf5783600d600061206e60005490565b81526020810191909152604090810160002091909155600a5460095491517fc5e918a900000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160a01b03928316604482015291169063c5e918a99060640160c060405180830381865afa1580156120f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211a91906132a1565b6000858152600c60209081526040918290208351815492850151858501516060870151608088015160a09098015164ffffffffff9485167fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000909716969096176501000000000093851693909302929092177fffffffffffffffffffffffff00000000000000000000ffffffffffffffffffff166a0100000000000000000000918416919091027fffffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffff16176f0100000000000000000000000000000091831691909102177fffff00000000000000000000ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000958216959095027fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff169490941779010000000000000000000000000000000000000000000000000094909216939093021782555185917f3553c5bc0fcbb797d3a56beb5efd6f393b9d27350213ad12ace9fb0d042b9e7c916122b69190613340565b60405180910390a25b6122c9858361262a565b50919392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561232b57507f000000000000000000000000000000000000000000000000000000000000000046145b1561235557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160410361242f5760208301516040840151606085015160001a6124238782858561275b565b94509450505050612437565b506000905060025b9250929050565b600081600481111561245257612452613391565b0361245a5750565b600181600481111561246e5761246e613391565b036124bb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401611021565b60028160048111156124cf576124cf613391565b0361251c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401611021565b600381600481111561253057612530613391565b036125a35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401611021565b60048160048111156125b7576125b7613391565b03610f785760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401611021565b6000805490829003612668576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461271757808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016126df565b5081600003612752576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005550505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612792575060009050600361283f565b8460ff16601b141580156127aa57508460ff16601c14155b156127bb575060009050600461283f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561280f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166128385760006001925092505061283f565b9150600090505b94509492505050565b6001600160a01b0381168114610f7857600080fd5b60006020828403121561286f57600080fd5b81356110d681612848565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610f7857600080fd5b6000602082840312156128ba57600080fd5b81356110d68161287a565b60005b838110156128e05781810151838201526020016128c8565b8381111561170b5750506000910152565b600081518084526129098160208601602086016128c5565b601f01601f19169290920160200192915050565b6020815260006110d660208301846128f1565b60006020828403121561294257600080fd5b5035919050565b6000806040838503121561295c57600080fd5b823561296781612848565b946020939093013593505050565b60008060006060848603121561298a57600080fd5b833561299581612848565b925060208401356129a581612848565b929592945050506040919091013590565b600080602083850312156129c957600080fd5b823567ffffffffffffffff808211156129e157600080fd5b818501915085601f8301126129f557600080fd5b813581811115612a0457600080fd5b8660208260051b8501011115612a1957600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b8181101561136a57612a958385516001600160a01b03815116825267ffffffffffffffff602082015116602083015260408101511515604083015262ffffff60608201511660608301525050565b9284019260809290920191600101612a47565b6020808252825182820181905260009190848201906040850190845b8181101561136a57835183529284019291840191600101612ac4565b60008083601f840112612af257600080fd5b50813567ffffffffffffffff811115612b0a57600080fd5b60208301915083602082850101111561243757600080fd5b60008060008060008060a08789031215612b3b57600080fd5b86359550602087013594506040870135935060608701359250608087013567ffffffffffffffff811115612b6e57600080fd5b612b7a89828a01612ae0565b979a9699509497509295939492505050565b600080600060608486031215612ba157600080fd5b8335612bac81612848565b95602085013595506040909401359392505050565b60008060408385031215612bd457600080fd5b8235612bdf81612848565b915060208301358015158114612bf457600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612c5757612c57612bff565b604052919050565b600067ffffffffffffffff821115612c7957612c79612bff565b50601f01601f191660200190565b6000612c9a612c9584612c5f565b612c2e565b9050828152838383011115612cae57600080fd5b828260208301376000602084830101529392505050565b60008060008060808587031215612cdb57600080fd5b8435612ce681612848565b93506020850135612cf681612848565b925060408501359150606085013567ffffffffffffffff811115612d1957600080fd5b8501601f81018713612d2a57600080fd5b612d3987823560208401612c87565b91505092959194509250565b600060208284031215612d5757600080fd5b813567ffffffffffffffff811115612d6e57600080fd5b8201601f81018413612d7f57600080fd5b611fab84823560208401612c87565b81516001600160a01b0316815260208083015167ffffffffffffffff169082015260408083015115159082015260608083015162ffffff169082015260808101610ab2565b60008060408385031215612de657600080fd5b8235612df181612848565b91506020830135612bf481612848565b600080600080600080600060c0888a031215612e1c57600080fd5b873596506020880135955060408801359450606088013593506080880135925060a088013567ffffffffffffffff811115612e5657600080fd5b612e628a828b01612ae0565b989b979a50959850939692959293505050565b600181811c90821680612e8957607f821691505b602082108103612ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260e081016110d660208301845464ffffffffff8082168352602882901c81166020840152605082901c81166040840152607882901c8116606084015260a082811c8216608085015260c89290921c16910152565b600060208284031215612f3157600080fd5b815167ffffffffffffffff811115612f4857600080fd5b8201601f81018413612f5957600080fd5b8051612f67612c9582612c5f565b818152856020838501011115612f7c57600080fd5b612f8d8260208301602086016128c5565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b601f821115610f9657600081815260208120601f850160051c81016020861015612fec5750805b601f850160051c820191505b81811015610e9457828155600101612ff8565b815167ffffffffffffffff81111561302557613025612bff565b613039816130338454612e75565b84612fc5565b602080601f83116001811461306e57600084156130565750858301515b600019600386901b1c1916600185901b178555610e94565b600085815260208120601f198616915b8281101561309d5788860151825594840194600190910190840161307e565b50858210156130bb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546130d981612e75565b600182811680156130f1576001811461312457613153565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450613153565b8760005260208060002060005b8581101561314a5781548a820152908401908201613131565b50505082870194505b50929695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156131a0576131a061315f565b500390565b6000826131db577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008160001904831182151516156131fa576131fa61315f565b500290565b600082198211156132125761321261315f565b500190565b6000816132265761322661315f565b506000190190565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261326060808301846128f1565b9695505050505050565b60006020828403121561327c57600080fd5b81516110d68161287a565b805164ffffffffff8116811461329c57600080fd5b919050565b600060c082840312156132b357600080fd5b60405160c0810181811067ffffffffffffffff821117156132d6576132d6612bff565b6040526132e283613287565b81526132f060208401613287565b602082015261330160408401613287565b604082015261331260608401613287565b606082015261332360808401613287565b608082015261333460a08401613287565b60a08201529392505050565b60c08101610ab282845464ffffffffff8082168352602882901c81166020840152605082901c81166040840152607882901c8116606084015260a082811c8216608085015260c89290921c16910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212201b4f895e1db87e5889861eec9dd906c1695e78b0fd4419153faae2cd4909978c64736f6c634300080f0033";

type NomoNounsTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NomoNounsTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NomoNounsToken__factory extends ContractFactory {
  constructor(...args: NomoNounsTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mintingStartPrice: PromiseOrValue<BigNumberish>,
    _mintingIncreaseInterval: PromiseOrValue<BigNumberish>,
    _mintingPriceIncreasePerInterval: PromiseOrValue<BigNumberish>,
    _withdrawWallet: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _auctionHouse: PromiseOrValue<string>,
    _seeder: PromiseOrValue<string>,
    _descriptor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NomoNounsToken> {
    return super.deploy(
      _mintingStartPrice,
      _mintingIncreaseInterval,
      _mintingPriceIncreasePerInterval,
      _withdrawWallet,
      _signer,
      _auctionHouse,
      _seeder,
      _descriptor,
      overrides || {}
    ) as Promise<NomoNounsToken>;
  }
  override getDeployTransaction(
    _mintingStartPrice: PromiseOrValue<BigNumberish>,
    _mintingIncreaseInterval: PromiseOrValue<BigNumberish>,
    _mintingPriceIncreasePerInterval: PromiseOrValue<BigNumberish>,
    _withdrawWallet: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _auctionHouse: PromiseOrValue<string>,
    _seeder: PromiseOrValue<string>,
    _descriptor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintingStartPrice,
      _mintingIncreaseInterval,
      _mintingPriceIncreasePerInterval,
      _withdrawWallet,
      _signer,
      _auctionHouse,
      _seeder,
      _descriptor,
      overrides || {}
    );
  }
  override attach(address: string): NomoNounsToken {
    return super.attach(address) as NomoNounsToken;
  }
  override connect(signer: Signer): NomoNounsToken__factory {
    return super.connect(signer) as NomoNounsToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NomoNounsTokenInterface {
    return new utils.Interface(_abi) as NomoNounsTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NomoNounsToken {
    return new Contract(address, _abi, signerOrProvider) as NomoNounsToken;
  }
}
