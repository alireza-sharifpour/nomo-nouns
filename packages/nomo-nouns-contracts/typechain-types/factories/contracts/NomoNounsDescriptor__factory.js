"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NomoNounsDescriptor__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract INounsArt",
                name: "_art",
                type: "address",
            },
            {
                internalType: "contract ISVGRenderer",
                name: "_renderer",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "BadPaletteLength",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyPalette",
        type: "error",
    },
    {
        inputs: [],
        name: "IndexNotFound",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract INounsArt",
                name: "art",
                type: "address",
            },
        ],
        name: "ArtUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "baseURI",
                type: "string",
            },
        ],
        name: "BaseURIUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "enabled",
                type: "bool",
            },
        ],
        name: "DataURIToggled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract ISVGRenderer",
                name: "renderer",
                type: "address",
            },
        ],
        name: "RendererUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "accessories",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "accessoryCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "art",
        outputs: [
            {
                internalType: "contract INounsArt",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "backgroundCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "backgroundOverrides",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "backgrounds",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "bodies",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "bodyCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint40",
                        name: "nounId",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "background",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "body",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "accessory",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "head",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "glasses",
                        type: "uint40",
                    },
                ],
                internalType: "struct INomoNounsSeeder.Seed",
                name: "seed",
                type: "tuple",
            },
        ],
        name: "dataURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint40",
                        name: "nounId",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "background",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "body",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "accessory",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "head",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "glasses",
                        type: "uint40",
                    },
                ],
                internalType: "struct INomoNounsSeeder.Seed",
                name: "seed",
                type: "tuple",
            },
        ],
        name: "generateSVGImage",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "description",
                type: "string",
            },
            {
                components: [
                    {
                        internalType: "uint40",
                        name: "nounId",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "background",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "body",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "accessory",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "head",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "glasses",
                        type: "uint40",
                    },
                ],
                internalType: "struct INomoNounsSeeder.Seed",
                name: "seed",
                type: "tuple",
            },
        ],
        name: "genericDataURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint40",
                        name: "nounId",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "background",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "body",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "accessory",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "head",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "glasses",
                        type: "uint40",
                    },
                ],
                internalType: "struct INomoNounsSeeder.Seed",
                name: "seed",
                type: "tuple",
            },
        ],
        name: "getPartsForSeed",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "image",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "palette",
                        type: "bytes",
                    },
                ],
                internalType: "struct ISVGRenderer.Part[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "glasses",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "glassesCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "headCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "heads",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isDataURIEnabled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "index",
                type: "uint8",
            },
        ],
        name: "palettes",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renderer",
        outputs: [
            {
                internalType: "contract ISVGRenderer",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract INounsArt",
                name: "_art",
                type: "address",
            },
        ],
        name: "setArt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "_color",
                type: "string",
            },
        ],
        name: "setBackgroundOverride",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_baseURI",
                type: "string",
            },
        ],
        name: "setBaseURI",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract ISVGRenderer",
                name: "_renderer",
                type: "address",
            },
        ],
        name: "setRenderer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "toggleDataURIEnabled",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint40",
                        name: "nounId",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "background",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "body",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "accessory",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "head",
                        type: "uint40",
                    },
                    {
                        internalType: "uint40",
                        name: "glasses",
                        type: "uint40",
                    },
                ],
                internalType: "struct INomoNounsSeeder.Seed",
                name: "seed",
                type: "tuple",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "unsetBackgroundOverride",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "$898be40fe8843234b138800c5ed3fc0496$__916322cc1ad6916110399173ffffffffffffffffffffffffffffffffffffffff909116908590600401612223565b600060405180830381865af4158015611056573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107e9190810190611d0d565b9392505050565b6001546040517fbc2d45fe00000000000000000000000000000000000000000000000000000000815260ff8316600482015260609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90602401610ab5565b606060006040518060a00160405280868152602001611108856000015164ffffffffff16611585565b8152602001858152602001611127856020015164ffffffffff16610460565b8152602001611135856105c0565b90526002546040517f8873aaf600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__91638873aaf6916111a69173ffffffffffffffffffffffffffffffffffffffff909116908590600401612295565b600060405180830381865af41580156111c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111eb9190810190611d0d565b95945050505050565b600154604080517f368013dc000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163368013dc91600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b61126b611504565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116740100000000000000000000000000000000000000009182900460ff1615918202179091556040518181527f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde90602001610ccc565b6112ef611504565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f89382d75256b43b6826ad8d6cbd8e517eaf5e10f1ef4c8f123c9a25ac4529b5590602001610ccc565b600154604080517f222a36d0000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163222a36d091600480830192869291908290030181865afa158015610a30573d6000803e3d6000fd5b6113d9611504565b73ffffffffffffffffffffffffffffffffffffffff8116611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6109be816116c2565b600154815160609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe9084906000906114c0576114c0611d56565b01602001516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260f89190911c6004820152602401610ab5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611478565b6060816000036115c857505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156115f257806115dc81612390565b91506115eb9050600a836123f7565b91506115cc565b60008167ffffffffffffffff81111561160d5761160d611809565b6040519080825280601f01601f191660200182016040528015611637576020820181803683370190505b5090505b84156116ba5761164c60018361240b565b9150611659600a86612422565b611664906030612436565b60f81b81838151811061167957611679611d56565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506116b3600a866123f7565b945061163b565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461174390611c8a565b6000825580601f10611753575050565b601f0160209004906000526020600020908101906109be91905b80821115611781576000815560010161176d565b5090565b60006020828403121561179757600080fd5b5035919050565b60005b838110156117b95781810151838201526020016117a1565b83811115610dbc5750506000910152565b600081518084526117e281602086016020860161179e565b601f01601f19169290920160200192915050565b60208152600061107e60208301846117ca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561185b5761185b611809565b60405290565b6040516060810167ffffffffffffffff8111828210171561185b5761185b611809565b604051601f8201601f1916810167ffffffffffffffff811182821017156118ad576118ad611809565b604052919050565b803564ffffffffff811681146118ca57600080fd5b919050565b600060c082840312156118e157600080fd5b60405160c0810181811067ffffffffffffffff8211171561190457611904611809565b604052905080611913836118b5565b8152611921602084016118b5565b6020820152611932604084016118b5565b6040820152611943606084016118b5565b6060820152611954608084016118b5565b608082015261196560a084016118b5565b60a08201525092915050565b600060c0828403121561198357600080fd5b61107e83836118cf565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611a22577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815180518785526119f6888601826117ca565b91890151858303868b0152919050611a0e81836117ca565b9689019694505050908601906001016119b4565b509098975050505050505050565b60008083601f840112611a4257600080fd5b50813567ffffffffffffffff811115611a5a57600080fd5b602083019150836020828501011115611a7257600080fd5b9250929050565b60008060208385031215611a8c57600080fd5b823567ffffffffffffffff811115611aa357600080fd5b611aaf85828601611a30565b90969095509350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146109be57600080fd5b600060208284031215611aef57600080fd5b813561107e81611abb565b60008060e08385031215611b0d57600080fd5b82359150611b1e84602085016118cf565b90509250929050565b600080600060408486031215611b3c57600080fd5b83359250602084013567ffffffffffffffff811115611b5a57600080fd5b611b6686828701611a30565b9497909650939450505050565b600060208284031215611b8557600080fd5b813560ff8116811461107e57600080fd5b600067ffffffffffffffff821115611bb057611bb0611809565b50601f01601f191660200190565b600082601f830112611bcf57600080fd5b8135611be2611bdd82611b96565b611884565b818152846020838601011115611bf757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006101008486031215611c2a57600080fd5b833567ffffffffffffffff80821115611c4257600080fd5b611c4e87838801611bbe565b94506020860135915080821115611c6457600080fd5b50611c7186828701611bbe565b925050611c8185604086016118cf565b90509250925092565b600181811c90821680611c9e57607f821691505b602082108103611cd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000611ceb611bdd84611b96565b9050828152838383011115611cff57600080fd5b61107e83602083018461179e565b600060208284031215611d1f57600080fd5b815167ffffffffffffffff811115611d3657600080fd5b8201601f81018413611d4757600080fd5b6116ba84825160208401611cdd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808385031215611d9857600080fd5b825167ffffffffffffffff80821115611db057600080fd5b81850191506040808388031215611dc657600080fd5b611dce611838565b835183811115611ddd57600080fd5b8401601f81018913611dee57600080fd5b805184811115611e0057611e00611809565b611e0e878260051b01611884565b8181528781019550606091820283018801918b831115611e2d57600080fd5b928801925b82841015611ea85780848d031215611e4a5760008081fd5b611e52611861565b845161ffff81168114611e655760008081fd5b8152848a015169ffffffffffffffffffff81168114611e845760008081fd5b818b015284870151611e9581611abb565b8188015287529588019592830192611e32565b5083525050928401519383019390935250949350505050565b600060208284031215611ed357600080fd5b5051919050565b601f821115611f2457600081815260208120601f850160051c81016020861015611f015750805b601f850160051c820191505b81811015611f2057828155600101611f0d565b5050505b505050565b67ffffffffffffffff831115611f4157611f41611809565b611f5583611f4f8354611c8a565b83611eda565b6000601f841160018114611fa75760008515611f715750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561201f565b600083815260209020601f19861690835b82811015611fd85786850135825560209485019460019092019101611fb8565b5086821015612013577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b7f4e6f756e2000000000000000000000000000000000000000000000000000000081526000825161208d81600585016020870161179e565b9190910160050192915050565b7f4e6f756e200000000000000000000000000000000000000000000000000000008152600082516120d281600585016020870161179e565b7f2069732061206d656d626572206f6620746865204e6f756e732044414f0000006005939091019283015250602201919050565b600080845461211481611c8a565b6001828116801561212c576001811461215f5761218e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061218e565b8860005260208060002060005b858110156121855781548a82015290840190820161216c565b50505082870194505b5050505083516121a281836020880161179e565b01949350505050565b6000815180845260208085019450848260051b860182860160005b858110156122165783830389528151604081518186526121e8828701826117ca565b9150508682015191508481038786015261220281836117ca565b9a87019a94505050908401906001016121c6565b5090979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160408084015261225a60808401826121ab565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610d3982826117ca565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160a060408401526122cd60e08401826117ca565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08085840301606086015261230983836117ca565b9250604086015191508085840301608086015261232683836117ca565b925060608601519150808584030160a086015261234383836117ca565b925060808601519150808584030160c086015250610d3982826121ab565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123c1576123c1612361565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612406576124066123c8565b500490565b60008282101561241d5761241d612361565b500390565b600082612431576124316123c8565b500690565b6000821982111561244957612449612361565b50019056fea26469706673582212205c6c59249d1f11a6896d1c88311dca0db36760b49b915daff1ee578fdb2d7e3264736f6c634300080f0033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class NomoNounsDescriptor__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, NomoNounsDescriptor__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$898be40fe8843234b138800c5ed3fc0496\\$__", "g"), linkLibraryAddresses["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(_art, _renderer, overrides) {
        return super.deploy(_art, _renderer, overrides || {});
    }
    getDeployTransaction(_art, _renderer, overrides) {
        return super.getDeployTransaction(_art, _renderer, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.NomoNounsDescriptor__factory = NomoNounsDescriptor__factory;
NomoNounsDescriptor__factory.bytecode = _bytecode;
NomoNounsDescriptor__factory.abi = _abi;
