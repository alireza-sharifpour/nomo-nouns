/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NomoNounsDescriptorV2,
  NomoNounsDescriptorV2Interface,
} from "../../contracts/NomoNounsDescriptorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
      {
        internalType: "contract INomoToNounMapper",
        name: "_nomoToNounMapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadPaletteLength",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPalette",
    type: "error",
  },
  {
    inputs: [],
    name: "IndexNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsArt",
        name: "art",
        type: "address",
      },
    ],
    name: "ArtUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DataURIToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISVGRenderer",
        name: "renderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "accessories",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "art",
    outputs: [
      {
        internalType: "contract INounsArt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgroundOverrides",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "bodies",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bodyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenNounId",
        type: "uint256",
      },
    ],
    name: "getNomoSerialNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "getPartsForSeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "image",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "palette",
            type: "bytes",
          },
        ],
        internalType: "struct ISVGRenderer.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "glasses",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glassesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "heads",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDataURIEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nomoToNounMapper",
    outputs: [
      {
        internalType: "contract INomoToNounMapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsArt",
        name: "_art",
        type: "address",
      },
    ],
    name: "setArt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_color",
        type: "string",
      },
    ],
    name: "setBackgroundOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISVGRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleDataURIEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint40",
            name: "nounId",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "background",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "body",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "accessory",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "head",
            type: "uint40",
          },
          {
            internalType: "uint40",
            name: "glasses",
            type: "uint40",
          },
        ],
        internalType: "struct INomoNounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "unsetBackgroundOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526003805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162002756380380620027568339810160408190526200004791620000fe565b620000523362000095565b600180546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556003805491909316911617905562000152565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000fb57600080fd5b50565b6000806000606084860312156200011457600080fd5b83516200012181620000e5565b60208501519093506200013481620000e5565b60408501519092506200014781620000e5565b809150509250925092565b6125f480620001626000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ca942101161010f578063bc2d45fe116100a2578063dfe8478b11610071578063dfe8478b14610473578063e6b1a3ae1461047b578063eba818061461048e578063f2fde38b1461049657600080fd5b8063bc2d45fe14610410578063be9570bd14610423578063cc2aa09114610436578063ce2f4f531461043e57600080fd5b8063b8bed3b1116100de578063b8bed3b1146103c4578063b982d1b9146103d7578063bb145866146103ea578063bbf103ef146103fd57600080fd5b80637ca94210146103605780638ada6b0f146103735780638da5cb5b14610393578063aa685cc5146103b157600080fd5b80634daebac2116101875780635a503f13116101565780635a503f131461032a5780635b9968f91461033d5780636c0360eb14610350578063715018a61461035857600080fd5b80634daebac2146102e957806355f804b3146102f157806356d3163d1461030457806357c1bf011461031757600080fd5b8063437190ba116101c3578063437190ba146102985780634479cef2146102b857806344cee73c146102ce5780634531c0a8146102e157600080fd5b806304bde4dd146101f557806315d6cde91461021e578063301bd28e1461023e5780634136a00614610283575b600080fd5b6102086102033660046118f6565b6104a9565b6040516102159190611967565b60405180910390f35b61023161022c366004611ae2565b610609565b6040516102159190611afe565b60015461025e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610215565b6102966102913660046118f6565b6109e8565b005b60035461025e9073ffffffffffffffffffffffffffffffffffffffff1681565b6102c0610a0a565b604051908152602001610215565b6102086102dc3660046118f6565b610aaa565b6102c0610b43565b6102c0610bdc565b6102966102ff366004611bea565b610c4b565b610296610312366004611c4e565b610c9e565b610208610325366004611c6b565b610d20565b6102086103383660046118f6565b610df9565b61029661034b366004611c98565b610e51565b610208610e78565b610296610f06565b61020861036e3660046118f6565b610f1a565b60025461025e9073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1661025e565b6102c06103bf366004611ce4565b610f72565b6102086103d2366004611c6b565b611034565b6102086103e53660046118f6565b61109e565b6102086103f83660046118f6565b6110f6565b61020861040b366004611ae2565b61110f565b61020861041e366004611d06565b6111f6565b610208610431366004611da7565b611250565b6102c0611365565b6003546104639074010000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610215565b6102966113d4565b610296610489366004611c4e565b611458565b6102c06114d3565b6102966104a4366004611c4e565b611542565b60008181526005602052604090208054606091906104c690611e1d565b905060000361056b576001546040517f04bde4dd0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff909116906304bde4dd90602401600060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105669190810190611ea0565b610603565b6000828152600560205260409020805461058490611e1d565b80601f01602080910402602001604051908101604052809291908181526020018280546105b090611e1d565b80156105fd5780601f106105d2576101008083540402835291602001916105fd565b820191906000526020600020905b8154815290600101906020018083116105e057829003601f168201915b50505050505b92915050565b60015460408281015190517f44cee73c00000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015260609160009173ffffffffffffffffffffffffffffffffffffffff909116906344cee73c90602401600060405180830381865afa15801561068a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b29190810190611ea0565b60015460608501516040517f7ca9421000000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690637ca9421090602401600060405180830381865afa158015610733573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261075b9190810190611ea0565b60015460808601516040517f5a503f1300000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690635a503f1390602401600060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108049190810190611ea0565b60015460a08701516040517fb982d1b900000000000000000000000000000000000000000000000000000000815264ffffffffff909116600482015291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063b982d1b990602401600060405180830381865afa158015610885573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ad9190810190611ea0565b60408051600480825260a0820190925291925060009190816020015b60408051808201909152606080825260208201528152602001906001900390816108c9579050509050604051806040016040528086815260200161090c876115fb565b8152508160008151811061092257610922611ee9565b60200260200101819052506040518060400160405280858152602001610947866115fb565b8152508160018151811061095d5761095d611ee9565b60200260200101819052506040518060400160405280848152602001610982856115fb565b8152508160028151811061099857610998611ee9565b602002602001018190525060405180604001604052808381526020016109bd846115fb565b815250816003815181106109d3576109d3611ee9565b60209081029190910101529695505050505050565b6109f0611675565b6000818152600560205260408120610a07916118a8565b50565b600154604080517fe73dd383000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163e73dd38391600480830192869291908290030181865afa158015610a79573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa19190810190611f18565b60200151905090565b6001546040517f44cee73c0000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff16906344cee73c906024015b600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106039190810190611ea0565b600154604080517ffd30704b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163fd30704b9160048083019260209291908290030181865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190612054565b905090565b600154604080517fc64b2f5d000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163c64b2f5d91600480830192869291908290030181865afa158015610a79573d6000803e3d6000fd5b610c53611675565b6004610c608284836120bc565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8282604051610c929291906121b9565b60405180910390a15050565b610ca6611675565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f482cbbbcf912da3be80deb8503ae1e94c0b7d5d1d0ec0af3d9d6403e06e609ee906020015b60405180910390a150565b80516060906000610d388564ffffffffff8416610f72565b90506000610d4c8364ffffffffff166116f6565b610d55836116f6565b604051602001610d669291906121e8565b60405160208183030381529060405290506000604051602001610dd2907f546865792077616e74656420746f206265636f6d652061204e6f756e2c20627581527f74206e6f77207468657920617265204e6f27204d6f2700000000000000000000602082015260360190565b6040516020818303038152906040529050610dee828288611250565b979650505050505050565b6001546040517f5a503f130000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff1690635a503f1390602401610afe565b610e59611675565b6000838152600560205260409020610e728284836120bc565b50505050565b60048054610e8590611e1d565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb190611e1d565b8015610efe5780601f10610ed357610100808354040283529160200191610efe565b820191906000526020600020905b815481529060010190602001808311610ee157829003601f168201915b505050505081565b610f0e611675565b610f186000611833565b565b6001546040517f7ca942100000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff1690637ca9421090602401610afe565b600060015b6000610f838286612298565b1180156110165750600354839073ffffffffffffffffffffffffffffffffffffffff1663fc187d25610fb58488612298565b6040518263ffffffff1660e01b8152600401610fd391815260200190565b602060405180830381865afa158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110149190612054565b145b1561102d5780611025816122af565b915050610f77565b9392505050565b60035460609074010000000000000000000000000000000000000000900460ff161561106b576110648383610d20565b9050610603565b6004611076846116f6565b6040516020016110879291906122e7565b604051602081830303815290604052905092915050565b6001546040517fb982d1b90000000000000000000000000000000000000000000000000000000081526004810183905260609173ffffffffffffffffffffffffffffffffffffffff169063b982d1b990602401610afe565b60056020526000908152604090208054610e8590611e1d565b60606000604051806040016040528061112785610609565b8152602001611140856020015164ffffffffff166104a9565b90526002546040517f22cc1ad600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__916322cc1ad6916111b19173ffffffffffffffffffffffffffffffffffffffff909116908590600401612407565b600060405180830381865af41580156111ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261102d9190810190611ea0565b6001546040517fbc2d45fe00000000000000000000000000000000000000000000000000000000815260ff8316600482015260609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90602401610afe565b606060006040518060a00160405280868152602001611279856000015164ffffffffff166116f6565b8152602001858152602001611298856020015164ffffffffff166104a9565b81526020016112a685610609565b90526002546040517f8873aaf600000000000000000000000000000000000000000000000000000000815291925073__$898be40fe8843234b138800c5ed3fc0496$__91638873aaf6916113179173ffffffffffffffffffffffffffffffffffffffff909116908590600401612483565b600060405180830381865af4158015611334573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261135c9190810190611ea0565b95945050505050565b600154604080517f368013dc000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163368013dc91600480830192869291908290030181865afa158015610a79573d6000803e3d6000fd5b6113dc611675565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116740100000000000000000000000000000000000000009182900460ff1615918202179091556040518181527f360c3d72ee193226275b842f85231c259c934e85459fed80fa68e502ffa9dbde90602001610d15565b611460611675565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f89382d75256b43b6826ad8d6cbd8e517eaf5e10f1ef4c8f123c9a25ac4529b5590602001610d15565b600154604080517f222a36d0000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163222a36d091600480830192869291908290030181865afa158015610a79573d6000803e3d6000fd5b61154a611675565b73ffffffffffffffffffffffffffffffffffffffff81166115f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610a0781611833565b600154815160609173ffffffffffffffffffffffffffffffffffffffff169063bc2d45fe90849060009061163157611631611ee9565b01602001516040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260f89190911c6004820152602401610afe565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016115e9565b60608160000361173957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611763578061174d816122af565b915061175c9050600a8361257e565b915061173d565b60008167ffffffffffffffff81111561177e5761177e61197a565b6040519080825280601f01601f1916602001820160405280156117a8576020820181803683370190505b5090505b841561182b576117bd600183612298565b91506117ca600a86612592565b6117d59060306125a6565b60f81b8183815181106117ea576117ea611ee9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611824600a8661257e565b94506117ac565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080546118b490611e1d565b6000825580601f106118c4575050565b601f016020900490600052602060002090810190610a0791905b808211156118f257600081556001016118de565b5090565b60006020828403121561190857600080fd5b5035919050565b60005b8381101561192a578181015183820152602001611912565b83811115610e725750506000910152565b6000815180845261195381602086016020860161190f565b601f01601f19169290920160200192915050565b60208152600061102d602083018461193b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156119cc576119cc61197a565b60405290565b6040516060810167ffffffffffffffff811182821017156119cc576119cc61197a565b604051601f8201601f1916810167ffffffffffffffff81118282101715611a1e57611a1e61197a565b604052919050565b803564ffffffffff81168114611a3b57600080fd5b919050565b600060c08284031215611a5257600080fd5b60405160c0810181811067ffffffffffffffff82111715611a7557611a7561197a565b604052905080611a8483611a26565b8152611a9260208401611a26565b6020820152611aa360408401611a26565b6040820152611ab460608401611a26565b6060820152611ac560808401611a26565b6080820152611ad660a08401611a26565b60a08201525092915050565b600060c08284031215611af457600080fd5b61102d8383611a40565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611b93577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281518051878552611b678886018261193b565b91890151858303868b0152919050611b7f818361193b565b968901969450505090860190600101611b25565b509098975050505050505050565b60008083601f840112611bb357600080fd5b50813567ffffffffffffffff811115611bcb57600080fd5b602083019150836020828501011115611be357600080fd5b9250929050565b60008060208385031215611bfd57600080fd5b823567ffffffffffffffff811115611c1457600080fd5b611c2085828601611ba1565b90969095509350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610a0757600080fd5b600060208284031215611c6057600080fd5b813561102d81611c2c565b60008060e08385031215611c7e57600080fd5b82359150611c8f8460208501611a40565b90509250929050565b600080600060408486031215611cad57600080fd5b83359250602084013567ffffffffffffffff811115611ccb57600080fd5b611cd786828701611ba1565b9497909650939450505050565b60008060408385031215611cf757600080fd5b50508035926020909101359150565b600060208284031215611d1857600080fd5b813560ff8116811461102d57600080fd5b600067ffffffffffffffff821115611d4357611d4361197a565b50601f01601f191660200190565b600082601f830112611d6257600080fd5b8135611d75611d7082611d29565b6119f5565b818152846020838601011115611d8a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006101008486031215611dbd57600080fd5b833567ffffffffffffffff80821115611dd557600080fd5b611de187838801611d51565b94506020860135915080821115611df757600080fd5b50611e0486828701611d51565b925050611e148560408601611a40565b90509250925092565b600181811c90821680611e3157607f821691505b602082108103611e6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000611e7e611d7084611d29565b9050828152838383011115611e9257600080fd5b61102d83602083018461190f565b600060208284031215611eb257600080fd5b815167ffffffffffffffff811115611ec957600080fd5b8201601f81018413611eda57600080fd5b61182b84825160208401611e70565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808385031215611f2b57600080fd5b825167ffffffffffffffff80821115611f4357600080fd5b81850191506040808388031215611f5957600080fd5b611f616119a9565b835183811115611f7057600080fd5b8401601f81018913611f8157600080fd5b805184811115611f9357611f9361197a565b611fa1878260051b016119f5565b8181528781019550606091820283018801918b831115611fc057600080fd5b928801925b8284101561203b5780848d031215611fdd5760008081fd5b611fe56119d2565b845161ffff81168114611ff85760008081fd5b8152848a015169ffffffffffffffffffff811681146120175760008081fd5b818b01528487015161202881611c2c565b8188015287529588019592830192611fc5565b5083525050928401519383019390935250949350505050565b60006020828403121561206657600080fd5b5051919050565b601f8211156120b757600081815260208120601f850160051c810160208610156120945750805b601f850160051c820191505b818110156120b3578281556001016120a0565b5050505b505050565b67ffffffffffffffff8311156120d4576120d461197a565b6120e8836120e28354611e1d565b8361206d565b6000601f84116001811461213a57600085156121045750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556121b2565b600083815260209020601f19861690835b8281101561216b578685013582556020948501946001909201910161214b565b50868210156121a6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b7f4e6f6d6f2065646974696f6e200000000000000000000000000000000000000081526000835161222081600d85016020880161190f565b7f2023000000000000000000000000000000000000000000000000000000000000600d91840191820152835161225d81600f84016020880161190f565b01600f01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156122aa576122aa612269565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122e0576122e0612269565b5060010190565b60008084546122f581611e1d565b6001828116801561230d57600181146123405761236f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061236f565b8860005260208060002060005b858110156123665781548a82015290840190820161234d565b50505082870194505b50505050835161238381836020880161190f565b01949350505050565b600081518084526020808501808196508360051b8101915082860160005b858110156123fa5782840389528151604081518187526123cc8288018261193b565b915050868201519150858103878701526123e6818361193b565b9a87019a95505050908401906001016123aa565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160408084015261243e608084018261238c565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152612479828261193b565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160a060408401526124bb60e084018261193b565b905060208401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808584030160608601526124f7838361193b565b92506040860151915080858403016080860152612514838361193b565b925060608601519150808584030160a0860152612531838361193b565b925060808601519150808584030160c086015250612479828261238c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261258d5761258d61254f565b500490565b6000826125a1576125a161254f565b500690565b600082198211156125b9576125b9612269565b50019056fea26469706673582212202e8cf9fc18798ce528885c5a78f27fcd3e8b5b489480c10ca60a87d9d951e78564736f6c634300080f0033";

type NomoNounsDescriptorV2ConstructorParams =
  | [
      linkLibraryAddresses: NomoNounsDescriptorV2LibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NomoNounsDescriptorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NomoNounsDescriptorV2__factory extends ContractFactory {
  constructor(...args: NomoNounsDescriptorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NomoNounsDescriptorV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NomoNounsDescriptorV2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$898be40fe8843234b138800c5ed3fc0496\\$__", "g"),
      linkLibraryAddresses["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    _nomoToNounMapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NomoNounsDescriptorV2> {
    return super.deploy(
      _art,
      _renderer,
      _nomoToNounMapper,
      overrides || {}
    ) as Promise<NomoNounsDescriptorV2>;
  }
  override getDeployTransaction(
    _art: PromiseOrValue<string>,
    _renderer: PromiseOrValue<string>,
    _nomoToNounMapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _art,
      _renderer,
      _nomoToNounMapper,
      overrides || {}
    );
  }
  override attach(address: string): NomoNounsDescriptorV2 {
    return super.attach(address) as NomoNounsDescriptorV2;
  }
  override connect(signer: Signer): NomoNounsDescriptorV2__factory {
    return super.connect(signer) as NomoNounsDescriptorV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NomoNounsDescriptorV2Interface {
    return new utils.Interface(_abi) as NomoNounsDescriptorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NomoNounsDescriptorV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NomoNounsDescriptorV2;
  }
}

export interface NomoNounsDescriptorV2LibraryAddresses {
  ["contracts/NomoNFTDescriptor.sol:NomoNFTDescriptor"]: string;
}
